// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: password_query.sql

package dbsqlctest

import (
	"context"

	typeid "go.jetify.com/typeid/v2"
)

const testCreatePassword = `-- name: TestCreatePassword :one
INSERT INTO shield_user_credentials
  (id, name, user_id, user_credential_key, user_credential_secret)
VALUES
  (
    $1,
    'password',
    $2,
    $3,
    $4
  )
RETURNING id, created_at, updated_at, name, user_id, user_credential_key, user_credential_secret
`

type TestCreatePasswordParams struct {
	ID                   typeid.TypeID
	UserID               typeid.TypeID
	UserCredentialKey    string
	UserCredentialSecret string
}

func (q *Queries) TestCreatePassword(ctx context.Context, db DBTX, arg TestCreatePasswordParams) (ShieldUserCredential, error) {
	row := db.QueryRow(ctx, testCreatePassword,
		arg.ID,
		arg.UserID,
		arg.UserCredentialKey,
		arg.UserCredentialSecret,
	)
	var i ShieldUserCredential
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.UserID,
		&i.UserCredentialKey,
		&i.UserCredentialSecret,
	)
	return i, err
}
