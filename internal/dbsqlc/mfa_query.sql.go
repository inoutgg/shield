// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: mfa_query.sql

package dbsqlc

import (
	"context"

	typeid "go.jetify.com/typeid/v2"
)

const getUserMFAs = `-- name: GetUserMFAs :many
SELECT id, created_at, updated_at, name, user_id FROM shield_user_mfas WHERE user_id = $1
`

func (q *Queries) GetUserMFAs(ctx context.Context, db DBTX, userID typeid.TypeID) ([]ShieldUserMfa, error) {
	rows, err := db.Query(ctx, getUserMFAs, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ShieldUserMfa
	for rows.Next() {
		var i ShieldUserMfa
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Name,
			&i.UserID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
